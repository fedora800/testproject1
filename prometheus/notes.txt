
--------------------------------------------------------------------------------

# to install directly on linux (ie non-containerized)
https://prometheus.io/docs/prometheus/latest/getting_started/

download and extract prometheus
https://github.com/prometheus/prometheus/releases/download/v2.50.1/prometheus-2.50.1.linux-amd64.tar.gz
$ rm prometheus-2.50.1.linux-amd64.tar.gz
$ mv prometheus-2.50.1.linux-amd64 prometheus
$ wc -l prometheus.yml          # default basic file is available
29 prometheus.yml
$ ./prometheus --web.listen-address="0.0.0.0:9090"           # start it like this, will be in foreground
# IMP - need to open port on firewall
# data is stored in prometheus/data directory by default
# gui becomes accessible now

prom server PUSHES messages/alerts to Alert Manager
prom server has a TSDB (time-series db)
prom server PULLS metrics data that are exposed by the various types of Exporters

--------------------------------------------------------------------------------
GUI

Main page 
we can put in expression to filter on

Alerts - alerts that are set
Graphs - will show graphs
Status - various status info
   Targets - shows which all targets it is monitoring (default is itself where its installed - http//localhost:9090/metrics)
   # i will need to give public ip address above if using via browser
   # we will need to configure new targets here (localhost will already be there ) -  
   scrape_configs:   
       static_configs: 
         - targets: ["localhost:9090", "acg-control1:9100", "acg-worker1:9100", "acg-worker2:9100"]
 




--------------------------------------------------------------------------------
AlertManager
needs a seperate install

The Alertmanager handles alerts sent by client applications such as the Prometheus server. It takes care of deduplicating, grouping, and routing them to the correct receiver integration such as email, PagerDuty, or OpsGenie. It also takes care of silencing and inhibition of alerts.

uses the "  8 alerting:" section in prometheus.yml config file, but we can define our own seperate config file which has all the preset rules

--------------------------------------------------------------------------------

Exporters
huge list of different exporters - https://prometheus.io/docs/instrumenting/exporters/

  - Node Exporter
  ---------------
  https://github.com/prometheus/node_exporter
  Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.

  install - 
  $ wget https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
  $ rm node_exporter-1.7.0.linux-amd64.tar.gz
  $ mv node_exporter-1.7.0.linux-amd64/ node_exporter
  $ ./node_exporter --web.listen-address=0.0.0.0:9100
  $ sudo ufw allow 9100/tcp comment 'prometheus node_exporter'


























